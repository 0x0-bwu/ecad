import os
import sys
from sys import platform
Import('env')

build_dir = env['BUILDPATH']
program_name = build_dir + '/ECadTest.exe'

source_files = [
    'UnitTest.cpp'
]

libs_name = [
    'Ecad',
    'boost_serialization',
    'pthread'
]

libs_path = [
    '/usr/local/lib',
]

libs_path.append(build_dir)

# mfsolver
mfsolver_support = env['MFSOLVERSUPPORT']
if mfsolver_support :
    mfsolver_path = env['MFSOLVERPATH']
    libs_path.append(mfsolver_path + '/mf2/lib')
    libs_path.append(mfsolver_path + '/mkl/lib')

    libs_name += [
        'mkl_intel_lp64',
        'mkl_sequential',
        'mkl_core',
        'ifcoremt',
        'imf',
        'iomp5',
        'irc',
        'intlc',
        'svml',
        'cublas',
        'cublasLt',
        'cudart',
        'ansmf',
        'ngcore'    
    ]   

if platform == "linux" or platform == "linux2" :
    libs_path.append('/usr/lib/x86_64-linux-gnu')
    libs_name.append('png')
elif platform == "darwin":
    libs_name.append('png')
#elif platform == "win32" :

rpath = libs_path

env.Program(program_name,source_files,LIBS=libs_name,LIBPATH=libs_path, RPATH=rpath)