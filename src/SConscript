Import('env')
import os
import sys
from sys import platform

lib_name='../build/Ecad'

#Source to generate lib
source_files = [
    'extension/dmcdom/ECadExtDmcDomHandler.cpp',
    'extension/gds/ECadExtGdsHandler.cpp',
    'extension/gds/EGdsFileIO.cpp',
    'extension/gds/EGdsParser.cpp',
    'extension/ECadExtension.cpp',
    'simulation/ELayerStackMeshGeneration.cpp',
    'simulation/EMetalFractionMapping.cpp',
    'simulation/EThermalNetworkExtraction.cpp',
    'utility/EBoundaryCalculator.cpp',
    'utility/EFlattenUtility.cpp',
    'utility/ELayoutMergeUtility.cpp',
    'utility/ELayoutConnectivity.cpp',
    'ECell.cpp',
    'ECellCollection.cpp',
    'ECellInst.cpp',
    'ECellInstCollection.cpp',
    'ECollection.cpp',
    'ECollectionCollection.cpp',
    'EConnObj.cpp',
    'EConnObjCollection.cpp',
    'EDatabase.cpp',
    'EDataMgr.cpp',
    'EDefinition.cpp',
    'EDefinitionCollection.cpp',
    'EHierarchyObj.cpp',
    'EHierarchyObjCollection.cpp',
    'ELayer.cpp',
    'ELayerCollection.cpp',
    'ELayerMap.cpp',
    'ELayerMapCollection.cpp',
    'ELayoutView.cpp',
    'EMaterialDef.cpp',
    'ENet.cpp',
    'ENetCollection.cpp',
    'EObject.cpp',
    'EPadstackDef.cpp',
    'EPadstackDefCollection.cpp',
    'EPadstackDefData.cpp',
    'EPadstackInst.cpp',
    'EPadstackInstCollection.cpp',
    'EPrimitive.cpp',
    'EPrimitiveCollection.cpp',
    'EShape.cpp'
]

libs_name = [
    'boost_serialization'
]

libs_path = [
    '/usr/local/lib',
]

if platform == "linux" or platform == "linux2" :
    libs_path.append('/usr/lib/x86_64-linux-gnu')
    libs_name.append('png')
    # libs_name.append('omp')
    libs_name.append('iomp5')
elif platform == "darwin":
    libs_name.append('png')
#elif platform == "win32" :

#Build lib
env.SharedLibrary(lib_name, source_files, LIBS=libs_name,LIBPATH=libs_path)
